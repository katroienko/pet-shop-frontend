import { backendInstance } from './backendInstance';

import requestDecorator from './requestDecorator';

export const getCategoriesAllApi = requestDecorator(async () => {
    const { data } = await backendInstance.get("/categories/all");
    return data;
});

// export const getCategorieById = requestDecorator(async (id) => {
//     const { data } = await backendInstance.get(`/categories/${id}`);
//     return data;
// });

// export const getCategorieById = requestDecorator(async (id, params = {}) => {
//   const { data } = await backendInstance.get(`/categories/${id}`, {
//     params,
//   });
//   return data;
// });

// export const getCategorieById = requestDecorator(async (id, params = {}) => {
//   // –í–∏–≤—ñ–¥ –±–∞–∑–æ–≤–æ–≥–æ URL, —à–ª—è—Ö—É —Ç–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤
//   const baseUrl = backendInstance.defaults.baseURL || "";
//   const url = new URL(`/categories/${id}`, baseUrl);

//   Object.entries(params).forEach(([key, value]) => {
//     if (value !== undefined && value !== null) {
//       url.searchParams.append(key, value);
//     }
//   });

//   // –õ–æ–≥—É–≤–∞–Ω–Ω—è –ø–æ–≤–Ω–æ–≥–æ URL –∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
//   console.log("‚û°Ô∏è –ó–∞–ø–∏—Ç –Ω–∞ –±–µ–∫–µ–Ω–¥:", url.toString());

//   const { data } = await backendInstance.get(`/categories/${id}`, {
//     params,
//   });

//   return data;
// });

export const getCategorieById = requestDecorator(async (id, params = {}) => {
  const queryString = new URLSearchParams(params).toString();
  console.log("‚û°Ô∏è GET /categories/" + id + "?" + queryString); // üîç –õ–æ–≥ –ø–æ–≤–Ω–æ–≥–æ URL
  const { data } = await backendInstance.get(`/categories/${id}`, {
    params,
  });
  return data;
});
